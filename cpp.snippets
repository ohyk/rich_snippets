priority -50

#===================================#
# Preprocessor
#===================================#

snippet inc "#include <...>"
#include <${1}>${2}
endsnippet

snippet Inc "#include ..."
#include "${1}"${2}
endsnippet

snippet def "#define ..."
#define ${1}
endsnippet

snippet ifdef "#ifdef ... #endif"
#ifdef ${1/([A-Za-z0-9_]+).*/$1/}
${VISUAL}${0}
#endif /* $1 */
endsnippet

snippet ifndef "#ifndef ... #define ... #endif"
#ifndef ${1/([A-Za-z0-9_]+).*/$1/}
#define ${1:SYMBOL} ${2:value}
#endif /* ifndef $1 */
endsnippet

snippet #if "#if #endif" b
#if ${1:0}
${VISUAL}${0}
#endif
endsnippet

snippet mark "#pragma mark (mark)"
#if 0
${1:#pragma mark -
}#pragma mark $2
#endif

$0
endsnippet

#===================================#
# Comment
#===================================#

snippet hcomment "/* head comment */"
/*====================================================================*/
/*${1}
`!p 
from datetime import datetime
now = datetime.now()
snip.rv=""" * Copyright (C) {} Richard Guo
 * Created on {}/{}/{}""".format(now.year, now.year, now.month, now.day)
`
 */${0}
/*====================================================================*/
endsnippet

snippet com "block comments"
//====================================================================
// ${VISUAL}${1}
//====================================================================${0}
endsnippet

#===================================#
# Functions
#===================================#
snippet main "main ()"
int main(int argc, char *argv[])
{
	${1}
	return 0;
}${0}
endsnippet

#===================================#
# using
#===================================#
snippet ustd "using std::"
using std::cin;
using std::cout;
using std::endl;
using std::cerr;${0}
endsnippet
