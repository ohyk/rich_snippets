priority -50

extends c

priority -49

# Global
global !p
def title(s):
	return ' {} '.format(s).center(72, '=')
endglobal

#===================================#
# Preprocessor
#===================================#

snippet inc "#include <...>"
#include <${1}>${2}
endsnippet

snippet Inc "#include ..."
#include "${1}"${2}
endsnippet

snippet def "#define ..."
#define ${1}
endsnippet

snippet ifdef "#ifdef ... #endif"
#ifdef ${1/([A-Za-z0-9_]+).*/$1/}
${VISUAL}${0}
#endif /* $1 */
endsnippet

snippet ifndef "#ifndef ... #define ... #endif"
#ifndef ${1/([A-Za-z0-9_]+).*/$1/}
#define ${1:SYMBOL} ${2:value}
#endif /* ifndef $1 */
endsnippet

snippet extc "extern C { ... }"
#ifdef __cplusplus
extern "C" {
#endif

${1}

#ifdef __cplusplus
}
#endif
endsnippet

snippet #if "#if #endif" b
#if ${1:0}
${VISUAL}${0}
#endif
endsnippet

snippet mark "#pragma mark (mark)"
#if 0
${1:#pragma mark -
}#pragma mark $2
#endif

$0
endsnippet

snippet once "Include header once only guard"
#ifndef ${1:`!p
if not snip.c:
	import random, string
	name = re.sub(r'[^A-Za-z0-9]+','_', snip.fn).upper()
	# rand = ''.join(random.sample(string.ascii_letters+string.digits, 8))
	# snip.rv = ('%s_%s' % (name,rand)).upper()
	snip.rv = '{}'.format(name).upper()
else:
	snip.rv = snip.c`}
#define $1

${VISUAL}${0}

#endif /* end of include guard: $1 */
endsnippet

#===================================#
# Comment
#===================================#

snippet hcomment "/* head comment */"
/*`!p
snip.rv = '='*72
`*/
/*${1}
`!p 
from datetime import datetime
now = datetime.now()
snip.rv=""" * Copyright (C) {} Richard Guo
 * Created on {}/{}/{}""".format(now.year, now.year, now.month, now.day)
`
 */
/*`!p
snip.rv = '='*72
`*/${0}
endsnippet

snippet lmark "//== Mark =="
//`!p
if not snip.v.text:
	snip.rv = '='*72
else:
	snip.rv = title(snip.v.text.strip('\n'))
`
endsnippet

snippet com "comments"
// ${VISUAL}${1}
endsnippet

snippet bcomm "block comment"
//`!p
if not snip.v.text:
	snip.rv = '='*72
else:
	snip.rv = title(snip.v.text.strip('\n'))
`
// ${1}
//`!p
snip.rv = '='*72
`${0}
endsnippet

#===================================#
# Class
#===================================#
snippet cls "class ... { ... }"
class ${1:Cname}
{
public: 
	$1();
	~$1();
	${3}
private:${2}
};${0}
endsnippet

#===================================#
# Functions
#===================================#
snippet main "main ()"
int main(int argc, char *argv[])
{
	${1}
	return 0;
}${0}
endsnippet

#===================================#
# using
#===================================#
snippet ustd "using std::"
using namespace std;
endsnippet

#===================================#
# Todo
#===================================#
snippet todo "TODO..."
//!	TODO(${1:Owner}): ${2:Todo description here}
//	\todo $2
endsnippet
